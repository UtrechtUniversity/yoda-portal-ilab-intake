<schema>
	<simple_text_example>
		<label>Text field 1</label>
		<help>This shows how to provide a simple text field</help>
		<type>text</type>
		<type_configuration>
			<length>false</length>
			<pattern>*</pattern>
			<longtext>false</longtext>
		</type_configuration>
		<required>false</required>
		<depends>false</depends>
	</simple_text_example>

	<simple_longtext_example>
		<label>Longtext field 1</label>
		<help>This shows how to provide a simple longtext field</help>
		<type>text</type>
		<type_configuration>
			<length>false</length>
			<pattern>*</pattern>
			<longtext>true</longtext>
		</type_configuration>
		<required>false</required>
		<depends>false</depends>
	</simple_longtext_example>

	<text_pattern_example>
		<label>Regex 1</label>
		<help>This shows how to use a regex to only allow numbers (you can use the numbers 0-9 between 5 and 10 times. No other input allowed)</help>
		<type>text</type>
		<type_configuration>
			<length>false</length>
			<pattern>/^[0-9]{5,10}$/</pattern>
			<longtext>false</longtext>
		</type_configuration>
		<required>false</required>
		<depends>false</depends>
	</text_pattern_example>

	<get_from_range>
		<label>Range select 1</label>
		<help>This input shows how to provide a select field, where users can pick a year between 1980 and 2016 when olympic games were held</help>
		<type>select</type>
		<type_configuration>
			<begin>1980</begin>
			<end>2016</end>
			<step>4</step>
		</type_configuration>
		<required>false</required>
		<depends>false</depends>
	</get_from_range>

	<get_from_range2>
		<label>Range select 2</label>
		<help>Same as Range Select 1, but with reversed order</help>
		<type>select</type>
		<type_configuration>
			<begin>2016</begin>
			<end>1980</end>
			<step>-4</step>
		</type_configuration>
		<required>false</required>
		<depends>false</depends>
	</get_from_range2>

	<get_from_options1>
		<label>Options select 1</label>
		<help>This shows how to use a select input with predefined options</help>
		<type>select</type>
		<type_configuration>
			<options>
				<option>Option 1</option>
				<option>Option 2</option>
				<option>Option 3</option>
				<option>Option 4</option>
				<option>Option 5</option>
				<option>Option 6</option>
				<option>Option 7</option>
			</options>
		</type_configuration>
		<required>false</required>
		<depends>false</depends>
	</get_from_options1>

	<get_from_options2>
		<label>Options select 2</label>
		<help>This shows how to use a select input with predefined grouped options</help>
		<type>select</type>
		<type_configuration>
			<options>
				<optgroup>
					<optlabel>Option group one</optlabel>
					<option>Option 1</option>
					<option>Option 2</option>
					<option>Option 3</option>
					<option>Option 4</option>
				</optgroup>
				<optgroup>
					<optlabel>Option group two</optlabel>
					<option>Option 5</option>
					<option>Option 6</option>
					<option>Option 7</option>
				</optgroup>
			</options>
		</type_configuration>
		<required>false</required>
		<depends>false</depends>
	</get_from_options2>

	<get_from_fixed1>
		<label>Suggestion select</label>
		<help>This shows how to use a select input, that suggests previously used values for the same iRODS metadata key. If a value does not yet exist in iRODS, a new key can be created</help>
		<type>select</type>
		<type_configuration>
			<restricted>true</restricted>
			<allow_create>true</allow_create>
		</type_configuration>
		<required>false</required>
		<depends>false</depends>
	</get_from_fixed1>

	<datetime_example_1>
		<label>Datetime example 1</label>
		<help>This shows how to provide a datetime picker. The datetime picker cannot take a value that is higher than that of Datetime example 2</help>
		<type>datetime</type>
		<type_configuration>
			<show_years>true</show_years>
			<show_months>true</show_months>
			<show_days>true</show_days>
			<show_time>true</show_time>
			<min_date_time>false</min_date_time>
			<max_date_time>
				<linked>datetime_example2</linked>
			</max_date_time>
		</type_configuration>
		<required>false</required>
		<depends>false</depends>
	</datetime_example_1>

	<datetime_example_2>
		<label>Datetime example 2</label>
		<help>This shows how to provide a datetime picker. The datetime picker cannot take a value that is lower than that of Datetime example 1</help>
		<type>datetime</type>
		<type_configuration>
			<show_years>true</show_years>
			<show_months>true</show_months>
			<show_days>true</show_days>
			<show_time>true</show_time>
			<min_date_time>
				<linked>datetime_example_1</linked>
			</min_date_time>
			<max_date_time>false</max_date_time>
		</type_configuration>
		<required>false</required>
		<depends>false</depends>
	</datetime_example_2>

	<checkboxes_example_1>
		<label>Checkboxes example 1</label>
		<help>This shows how to use a checkbox input with predefined options</help>
		<type>checkbox</type>
		<type_configuration>
			<options>
				<option>Option 1</option>
				<option>Option 2</option>
				<option>Option 3</option>
				<option>Option 4</option>
				<option>Option 5</option>
				<option>Option 6</option>
				<option>Option 7</option>
			</options>
		</type_configuration>
		<required>false</required>
		<depends>false</depends>
	</checkboxes_example_1>

	<radio_example_1>
		<label>Radio example 1</label>
		<help>This shows how to use radio buttons with predefined options</help>
		<type>radio</type>
		<type_configuration>
			<options>
				<option>Option 1</option>
				<option>Option 2</option>
				<option>Option 3</option>
				<option>Option 4</option>
				<option>Option 5</option>
				<option>Option 6</option>
				<option>Option 7</option>
			</options>
		</type_configuration>
		<required>false</required>
		<depends>false</depends>
	</radio_example_1>
	<example_user_select>
	    <label>Example user select</label>
	    <help>This shows an example of the user select input</help>
	    <type>custom</type>
	    <custom_type>userlist</custom_type>
	    <type_configuration>
	        <allow_create>false</allow_create>
	        <show_admins>true</show_admins>
	        <show_users>true</show_users>
	        <show_readonly>true</show_readonly>
	    </type_configuration>
	    <required>true</required>
	    <depends>false</depends>
	</example_user_select>
	<example_dirlist>
	    <label>Example directory listing</label>
	    <help>This shows an example of the directory select input</help>
	    <type>custom</type>
	    <custom_type>directorylist</custom_type>
	    <type_configuration>
	        <showProjects>true</showProjects>
	        <showStudies>true</showStudies>
	        <showDatasets>true</showDatasets>
	        <requireContribute>false</requireContribute>
	        <requireManager>false</requireManager>
	    </type_configuration>
	    <required>true</required>
	    <allow_empty>false</allow_empty>
	    <depends>false</depends>
	</example_dirlist>

	<multiple_example_1>
		<label>Multiple Example 1</label>
		<help>This shows how to allow multiple values on a single field</help>
		<type>text</type>
		<type_configuration>
			<length>false</length>
			<pattern>*</pattern>
			<longtext>false</longtext>
		</type_configuration>
		<required>false</required>
		<depends>false</depends>
		 <multiple>
	    	<min>0</min>
	    	<max>0</max>
	    	<infinite>true</infinite>
	    </multiple>
	</multiple_example_1>
	
	<multiple_example_2>
	    <label>Example user select</label>
	    <help>This shows how to use multiple values on a single field</help>
	    <type>custom</type>
	    <custom_type>userlist</custom_type>
	    <type_configuration>
	        <allow_create>false</allow_create>
	        <show_admins>true</show_admins>
	        <show_users>true</show_users>
	        <show_readonly>true</show_readonly>
	    </type_configuration>
	    <required>true</required>
	    <depends>false</depends>
	    <multiple>
	    	<min>0</min>
	    	<max>0</max>
	    	<infinite>true</infinite>
	    </multiple>
	</multiple_example_2>

	<conditional_trigger_example>
		<label>Conditional trigger example</label>
		<help>This input shows how to use a conditional trigger. Enter at least 7 characters in this field and see what happens</help>
		<type>text</type>
		<type_configuration>
			<length>20</length>
			<pattern>*</pattern>
			<longtext>false</longtext>
		</type_configuration>
		<required>false</required>
		<depends>false</depends>
	</conditional_trigger_example>

	<conditional_event_example>
		<label>Conditional event example</label>
		<help>This field should only show up, if Conditional trigger example field contains at least 7 characters</help>
		<type>text</type>
		<type_configuration>
			<length>20</length>
			<pattern>*</pattern>
			<longtext>false</longtext>
		</type_configuration>
		<required>false</required>
		<depends>
			<action>show</action>
			<if>all</if>
			<fields>
				<option>
					<field_name>conditional_trigger_example</field_name>
					<operator>==</operator>
					<value>
						<regex>/^.{7,}$/</regex>
					</value>
				</option>
			</fields>
		</depends>
	</conditional_event_example>
</schema>